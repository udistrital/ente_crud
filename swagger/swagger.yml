swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /atributo_ubicacion/:
    get:
      tags:
      - atributo_ubicacion
      description: get AtributoUbicacion
      operationId: AtributoUbicacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AtributoUbicacion'
        "404":
          description: not found resource
    post:
      tags:
      - atributo_ubicacion
      description: create AtributoUbicacion
      operationId: AtributoUbicacionController.Post
      parameters:
      - in: body
        name: body
        description: body for AtributoUbicacion content
        required: true
        schema:
          $ref: '#/definitions/models.AtributoUbicacion'
      responses:
        "201":
          description: '{int} models.AtributoUbicacion'
        "400":
          description: the request contains incorrect syntax
  /atributo_ubicacion/{id}:
    get:
      tags:
      - atributo_ubicacion
      description: get AtributoUbicacion by id
      operationId: AtributoUbicacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AtributoUbicacion'
        "404":
          description: not found resource
    put:
      tags:
      - atributo_ubicacion
      description: update the AtributoUbicacion
      operationId: AtributoUbicacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AtributoUbicacion content
        required: true
        schema:
          $ref: '#/definitions/models.AtributoUbicacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AtributoUbicacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - atributo_ubicacion
      description: delete the AtributoUbicacion
      operationId: AtributoUbicacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /contacto_ente/:
    get:
      tags:
      - contacto_ente
      description: get ContactoEnte
      operationId: ContactoEnteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContactoEnte'
        "404":
          description: not found resource
    post:
      tags:
      - contacto_ente
      description: create ContactoEnte
      operationId: ContactoEnteController.Post
      parameters:
      - in: body
        name: body
        description: body for ContactoEnte content
        required: true
        schema:
          $ref: '#/definitions/models.ContactoEnte'
      responses:
        "201":
          description: '{int} models.ContactoEnte'
        "400":
          description: the request contains incorrect syntax
  /contacto_ente/{id}:
    get:
      tags:
      - contacto_ente
      description: get ContactoEnte by id
      operationId: ContactoEnteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContactoEnte'
        "404":
          description: not found resource
    put:
      tags:
      - contacto_ente
      description: update the ContactoEnte
      operationId: ContactoEnteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ContactoEnte content
        required: true
        schema:
          $ref: '#/definitions/models.ContactoEnte'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContactoEnte'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - contacto_ente
      description: delete the ContactoEnte
      operationId: ContactoEnteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /ente/:
    get:
      tags:
      - ente
      description: get Ente
      operationId: EnteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ente'
        "404":
          description: not found resource
    post:
      tags:
      - ente
      description: create Ente
      operationId: EnteController.Post
      parameters:
      - in: body
        name: body
        description: body for Ente content
        required: true
        schema:
          $ref: '#/definitions/models.Ente'
      responses:
        "201":
          description: '{int} models.Ente'
        "400":
          description: the request contains incorrect syntax
  /ente/{id}:
    get:
      tags:
      - ente
      description: get Ente by id
      operationId: EnteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ente'
        "404":
          description: not found resource
    put:
      tags:
      - ente
      description: update the Ente
      operationId: EnteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Ente content
        required: true
        schema:
          $ref: '#/definitions/models.Ente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ente'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - ente
      description: delete the Ente
      operationId: EnteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /identificacion/:
    get:
      tags:
      - identificacion
      description: get Identificacion
      operationId: IdentificacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Identificacion'
        "404":
          description: not found resource
    post:
      tags:
      - identificacion
      description: create Identificacion
      operationId: IdentificacionController.Post
      parameters:
      - in: body
        name: body
        description: body for Identificacion content
        required: true
        schema:
          $ref: '#/definitions/models.Identificacion'
      responses:
        "201":
          description: '{int} models.Identificacion'
        "403":
          description: body is empty
  /identificacion/{id}:
    get:
      tags:
      - identificacion
      description: get Identificacion by id
      operationId: IdentificacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Identificacion'
        "404":
          description: not found resource
    put:
      tags:
      - identificacion
      description: update the Identificacion
      operationId: IdentificacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Identificacion content
        required: true
        schema:
          $ref: '#/definitions/models.Identificacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Identificacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - identificacion
      description: delete the Identificacion
      operationId: IdentificacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_contacto/:
    get:
      tags:
      - tipo_contacto
      description: get TipoContacto
      operationId: TipoContactoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoContacto'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_contacto
      description: create TipoContacto
      operationId: TipoContactoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoContacto content
        required: true
        schema:
          $ref: '#/definitions/models.TipoContacto'
      responses:
        "201":
          description: '{int} models.TipoContacto'
        "400":
          description: the request contains incorrect syntax
  /tipo_contacto/{id}:
    get:
      tags:
      - tipo_contacto
      description: get TipoContacto by id
      operationId: TipoContactoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoContacto'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_contacto
      description: update the TipoContacto
      operationId: TipoContactoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoContacto content
        required: true
        schema:
          $ref: '#/definitions/models.TipoContacto'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoContacto'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_contacto
      description: delete the TipoContacto
      operationId: TipoContactoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_ente/:
    get:
      tags:
      - tipo_ente
      description: get TipoEnte
      operationId: TipoEnteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoEnte'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_ente
      description: create TipoEnte
      operationId: TipoEnteController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoEnte content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEnte'
      responses:
        "201":
          description: '{int} models.TipoEnte'
        "400":
          description: the request contains incorrect syntax
  /tipo_ente/{id}:
    get:
      tags:
      - tipo_ente
      description: get TipoEnte by id
      operationId: TipoEnteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoEnte'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_ente
      description: update the TipoEnte
      operationId: TipoEnteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoEnte content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEnte'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoEnte'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_ente
      description: delete the TipoEnte
      operationId: TipoEnteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_identificacion/:
    get:
      tags:
      - tipo_identificacion
      description: get TipoIdentificacion
      operationId: TipoIdentificacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoIdentificacion'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_identificacion
      description: create TipoIdentificacion
      operationId: TipoIdentificacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoIdentificacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoIdentificacion'
      responses:
        "201":
          description: '{int} models.TipoIdentificacion'
        "400":
          description: the request contains incorrect syntax
  /tipo_identificacion/{id}:
    get:
      tags:
      - tipo_identificacion
      description: get TipoIdentificacion by id
      operationId: TipoIdentificacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoIdentificacion'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_identificacion
      description: update the TipoIdentificacion
      operationId: TipoIdentificacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoIdentificacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoIdentificacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoIdentificacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_identificacion
      description: delete the TipoIdentificacion
      operationId: TipoIdentificacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_relacion_ubicacion_ente/:
    get:
      tags:
      - tipo_relacion_ubicacion_ente
      description: get TipoRelacionUbicacionEnte
      operationId: TipoRelacionUbicacionEnteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoRelacionUbicacionEnte'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_relacion_ubicacion_ente
      description: create TipoRelacionUbicacionEnte
      operationId: TipoRelacionUbicacionEnteController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoRelacionUbicacionEnte content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRelacionUbicacionEnte'
      responses:
        "201":
          description: '{int} models.TipoRelacionUbicacionEnte'
        "400":
          description: the request contains incorrect syntax
  /tipo_relacion_ubicacion_ente/{id}:
    get:
      tags:
      - tipo_relacion_ubicacion_ente
      description: get TipoRelacionUbicacionEnte by id
      operationId: TipoRelacionUbicacionEnteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoRelacionUbicacionEnte'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_relacion_ubicacion_ente
      description: update the TipoRelacionUbicacionEnte
      operationId: TipoRelacionUbicacionEnteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoRelacionUbicacionEnte content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRelacionUbicacionEnte'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoRelacionUbicacionEnte'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_relacion_ubicacion_ente
      description: delete the TipoRelacionUbicacionEnte
      operationId: TipoRelacionUbicacionEnteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /ubicacion_ente/:
    get:
      tags:
      - ubicacion_ente
      description: get UbicacionEnte
      operationId: UbicacionEnteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UbicacionEnte'
        "404":
          description: not found resource
    post:
      tags:
      - ubicacion_ente
      description: create UbicacionEnte
      operationId: UbicacionEnteController.Post
      parameters:
      - in: body
        name: body
        description: body for UbicacionEnte content
        required: true
        schema:
          $ref: '#/definitions/models.UbicacionEnte'
      responses:
        "201":
          description: '{int} models.UbicacionEnte'
        "400":
          description: the request contains incorrect syntax
  /ubicacion_ente/{id}:
    get:
      tags:
      - ubicacion_ente
      description: get UbicacionEnte by id
      operationId: UbicacionEnteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UbicacionEnte'
        "404":
          description: not found resource
    put:
      tags:
      - ubicacion_ente
      description: update the UbicacionEnte
      operationId: UbicacionEnteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for UbicacionEnte content
        required: true
        schema:
          $ref: '#/definitions/models.UbicacionEnte'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UbicacionEnte'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - ubicacion_ente
      description: delete the UbicacionEnte
      operationId: UbicacionEnteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /valor_atributo_ubicacion/:
    get:
      tags:
      - valor_atributo_ubicacion
      description: get ValorAtributoUbicacion
      operationId: ValorAtributoUbicacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ValorAtributoUbicacion'
        "404":
          description: not found resource
    post:
      tags:
      - valor_atributo_ubicacion
      description: create ValorAtributoUbicacion
      operationId: ValorAtributoUbicacionController.Post
      parameters:
      - in: body
        name: body
        description: body for ValorAtributoUbicacion content
        required: true
        schema:
          $ref: '#/definitions/models.ValorAtributoUbicacion'
      responses:
        "201":
          description: '{int} models.ValorAtributoUbicacion'
        "400":
          description: the request contains incorrect syntax
  /valor_atributo_ubicacion/{id}:
    get:
      tags:
      - valor_atributo_ubicacion
      description: get ValorAtributoUbicacion by id
      operationId: ValorAtributoUbicacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ValorAtributoUbicacion'
        "404":
          description: not found resource
    put:
      tags:
      - valor_atributo_ubicacion
      description: update the ValorAtributoUbicacion
      operationId: ValorAtributoUbicacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ValorAtributoUbicacion content
        required: true
        schema:
          $ref: '#/definitions/models.ValorAtributoUbicacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ValorAtributoUbicacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - valor_atributo_ubicacion
      description: delete the ValorAtributoUbicacion
      operationId: ValorAtributoUbicacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
definitions:
  models.AtributoUbicacion:
    title: AtributoUbicacion
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.ContactoEnte:
    title: ContactoEnte
    type: object
    properties:
      Ente:
        $ref: '#/definitions/models.Ente'
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      TipoContacto:
        $ref: '#/definitions/models.TipoContacto'
      Valor:
        type: string
  models.Ente:
    title: Ente
    type: object
    properties:
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      TipoEnte:
        $ref: '#/definitions/models.TipoEnte'
  models.Identificacion:
    title: Identificacion
    type: object
    properties:
      Ente:
        $ref: '#/definitions/models.Ente'
      FechaCreacion:
        type: string
      FechaExpedicion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      LugarExpedicion:
        type: integer
        format: int64
      NumeroIdentificacion:
        type: string
      Soporte:
        type: integer
        format: int64
      TipoIdentificacion:
        $ref: '#/definitions/models.TipoIdentificacion'
  models.TipoContacto:
    title: TipoContacto
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoEnte:
    title: TipoEnte
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoIdentificacion:
    title: TipoIdentificacion
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoRelacionUbicacionEnte:
    title: TipoRelacionUbicacionEnte
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.UbicacionEnte:
    title: UbicacionEnte
    type: object
    properties:
      Activo:
        type: boolean
      Ente:
        $ref: '#/definitions/models.Ente'
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Lugar:
        type: integer
        format: int64
      TipoRelacionUbicacionEnte:
        $ref: '#/definitions/models.TipoRelacionUbicacionEnte'
  models.ValorAtributoUbicacion:
    title: ValorAtributoUbicacion
    type: object
    properties:
      AtributoUbicacion:
        $ref: '#/definitions/models.AtributoUbicacion'
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      UbicacionEnte:
        $ref: '#/definitions/models.UbicacionEnte'
      Valor:
        type: string
tags:
- name: tipo_ente
  description: |
    TipoEnteController operations for TipoEnte
- name: contacto_ente
  description: |
    ContactoEnteController operations for ContactoEnte
- name: identificacion
  description: |
    IdentificacionController operations for Identificacion
- name: tipo_identificacion
  description: |
    TipoIdentificacionController operations for TipoIdentificacion
- name: tipo_contacto
  description: |
    TipoContactoController operations for TipoContacto
- name: ente
  description: |
    EnteController operations for Ente
- name: ubicacion_ente
  description: |
    UbicacionEnteController operations for UbicacionEnte
- name: tipo_relacion_ubicacion_ente
  description: |
    TipoRelacionUbicacionEnteController operations for TipoRelacionUbicacionEnte
- name: valor_atributo_ubicacion
  description: |
    ValorAtributoUbicacionController operations for ValorAtributoUbicacion
- name: atributo_ubicacion
  description: |
    AtributoUbicacionController operations for AtributoUbicacion
